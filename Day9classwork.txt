// blog application that stores all posts in a collection called posts

test> use Blog
switched to db Blog
Blog> db.posts.insertMany([
...   {
...     title: "Getting Started with MongoDB",
...     author: "Sneha G R",
...     tags: ["mongodb", "database", "nosql"],
...     publishedDate: ISODate("2025-09-20T10:00:00Z")
...   },
...   {
...     title: "Understanding JavaScript Closures",
...     author: "Ravi Kumar",
...     tags: ["javascript", "functions", "webdev"],
...     publishedDate: ISODate("2025-09-25T14:30:00Z")
...   },
...   {
...     title: "Full Stack Development with MERN",
...     author: "Anjali Menon",
...     tags: ["mern", "react", "nodejs", "mongodb"],
...     publishedDate: ISODate("2025-09-28T09:15:00Z")
...   },
...   {
...     title: "Deep Dive into Python Generators",
...     author: "Rahul Sharma",
...     tags: ["python", "generators", "backend"],
...     publishedDate: ISODate("2025-09-30T18:45:00Z")
...   },
...   {
...     title: "Exploring Cloud Computing with AWS",
...     author: "Meera Nair",
...     tags: ["cloud", "aws", "devops"],
...     publishedDate: ISODate("2025-10-02T12:00:00Z")
...   }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68df5910bcb0a01d65cebea4'),
    '1': ObjectId('68df5910bcb0a01d65cebea5'),
    '2': ObjectId('68df5910bcb0a01d65cebea6'),
    '3': ObjectId('68df5910bcb0a01d65cebea7'),
    '4': ObjectId('68df5910bcb0a01d65cebea8')
  }
}

Blog> db.posts.find()
[
  {
    _id: ObjectId('68df5910bcb0a01d65cebea4'),
    title: 'Getting Started with MongoDB',
    author: 'Sneha G R',
    tags: [ 'mongodb', 'database', 'nosql' ],
    publishedDate: ISODate('2025-09-20T10:00:00.000Z')
  },
  {
    _id: ObjectId('68df5910bcb0a01d65cebea5'),
    title: 'Understanding JavaScript Closures',
    author: 'Ravi Kumar',
    tags: [ 'javascript', 'functions', 'webdev' ],
    publishedDate: ISODate('2025-09-25T14:30:00.000Z')
  },
  {
    _id: ObjectId('68df5910bcb0a01d65cebea6'),
    title: 'Full Stack Development with MERN',
    author: 'Anjali Menon',
    tags: [ 'mern', 'react', 'nodejs', 'mongodb' ],
    publishedDate: ISODate('2025-09-28T09:15:00.000Z')
  },
  {
    _id: ObjectId('68df5910bcb0a01d65cebea7'),
    title: 'Deep Dive into Python Generators',
    author: 'Rahul Sharma',
    tags: [ 'python', 'generators', 'backend' ],
    publishedDate: ISODate('2025-09-30T18:45:00.000Z')
  },
  {
    _id: ObjectId('68df5910bcb0a01d65cebea8'),
    title: 'Exploring Cloud Computing with AWS',
    author: 'Meera Nair',
    tags: [ 'cloud', 'aws', 'devops' ],
    publishedDate: ISODate('2025-10-02T12:00:00.000Z')
  }
]

//Create an index to help quickly find posts by the author field in ascending order.

Blog> db.posts.createIndex({author : 1})
author_1

//Create another index on publishedDate in descending order to quickly sort the latest posts.

Blog> db.posts.createIndex({publishedDate : -1})
publishedDate_-1

//List all indexes present in the posts collection.

Blog> db.posts.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { author: 1 }, name: 'author_1' },
  { v: 2, key: { publishedDate: -1 }, name: 'publishedDate_-1' }
]

//Finally, remove the index on the author field.

Blog> db.posts.dropIndex({author : 1})
{ nIndexesWas: 3, ok: 1 }

Blog> db.posts.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { publishedDate: -1 }, name: 'publishedDate_-1' }
]