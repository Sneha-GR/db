//The system stores user-submitted tickets in a MongoDB collection named tickets. 

BlogApn> use supportSys
switched to db supportSys
supportSys> db.tickets.insertMany([
...   {
...     subject: "Login error on website",
...     description: "User cannot log in due to authentication failure.",
...     createdAt: new Date("2024-10-01")
...   },
...   {
...     subject: "Payment failed for order #1234",
...     description: "Customer reported that payment failed during checkout.",
...     createdAt: new Date("2024-10-02")
...   },
...   {
...     subject: "Error while loading dashboard",
...     description: "Dashboard fails to load after the recent update.",
...     createdAt: new Date("2024-10-03")
...   },
...   {
...     subject: "Feature request: Dark mode",
...     description: "User requested adding a dark mode option in settings.",
...     createdAt: new Date("2024-10-04")
...   },
...   {
...     subject: "Unable to reset password",
...     description: "Password reset link expired before the user could use it.",
...     createdAt: new Date("2024-10-05")
...   }
... ])
...
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68e523c2c5b59a2ab6cebea9'),
    '1': ObjectId('68e523c2c5b59a2ab6cebeaa'),
    '2': ObjectId('68e523c2c5b59a2ab6cebeab'),
    '3': ObjectId('68e523c2c5b59a2ab6cebeac'),
    '4': ObjectId('68e523c2c5b59a2ab6cebead')
  }
}
supportSys> db.tickets.find()
[
  {
    _id: ObjectId('68e523c2c5b59a2ab6cebea9'),
    subject: 'Login error on website',
    description: 'User cannot log in due to authentication failure.',
    createdAt: ISODate('2024-10-01T00:00:00.000Z')
  },
  {
    _id: ObjectId('68e523c2c5b59a2ab6cebeaa'),
    subject: 'Payment failed for order #1234',
    description: 'Customer reported that payment failed during checkout.',
    createdAt: ISODate('2024-10-02T00:00:00.000Z')
  },
  {
    _id: ObjectId('68e523c2c5b59a2ab6cebeab'),
    subject: 'Error while loading dashboard',
    description: 'Dashboard fails to load after the recent update.',
    createdAt: ISODate('2024-10-03T00:00:00.000Z')
  },
  {
    _id: ObjectId('68e523c2c5b59a2ab6cebeac'),
    subject: 'Feature request: Dark mode',
    description: 'User requested adding a dark mode option in settings.',
    createdAt: ISODate('2024-10-04T00:00:00.000Z')
  },
  {
    _id: ObjectId('68e523c2c5b59a2ab6cebead'),
    subject: 'Unable to reset password',
    description: 'Password reset link expired before the user could use it.',
    createdAt: ISODate('2024-10-05T00:00:00.000Z')
  }
]

//Create a text index on subject and description

supportSys> db.tickets.createIndex({ subject: "text", description: "text" })
subject_text_description_text

//Verify the index creation

supportSys> db.tickets.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  {
    v: 2,
    key: { _fts: 'text', _ftsx: 1 },
    name: 'subject_text_description_text',
    weights: { description: 1, subject: 1 },
    default_language: 'english',
    language_override: 'language',
    textIndexVersion: 3
  }
]

//Search for tickets mentioning “error”

supportSys> db.tickets.find({ $text: { $search: "error" } })
[
  {
    _id: ObjectId('68e523c2c5b59a2ab6cebeab'),
    subject: 'Error while loading dashboard',
    description: 'Dashboard fails to load after the recent update.',
    createdAt: ISODate('2024-10-03T00:00:00.000Z')
  },
  {
    _id: ObjectId('68e523c2c5b59a2ab6cebea9'),
    subject: 'Login error on website',
    description: 'User cannot log in due to authentication failure.',
    createdAt: ISODate('2024-10-01T00:00:00.000Z')
  }
]

//Finally, remove the search functionality after testing

supportSys> db.tickets.dropIndex("subject_text_description_text")
{ nIndexesWas: 2, ok: 1 }
